#!/usr/bin/env bash

echo "###########################################################"
echo "Running: $0"
echo "###########################################################"

# Ask for the administrator password upfront.
sudo -v

# Keep-alive: update existing `sudo` time stamp until the script has finished.
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

########################################
# Per machine
########################################

########################################
{{ if eq .chezmoi.os "darwin" -}}

test -f /usr/local/bin/brew && eval "$(/usr/local/bin/brew shellenv)"
test -f /opt/homebrew/bin/brew && eval "$(/opt/homebrew/bin/brew shellenv)"

# Switch to using brew-installed bash as default shell
if ! fgrep -q "${HOMEBREW_PREFIX}/bin/bash" /etc/shells; then
  echo "${HOMEBREW_PREFIX}/bin/bash" | sudo tee -a /etc/shells;
  chsh -s "${HOMEBREW_PREFIX}/bin/bash";
fi

# Add Homebrew /bin to .app known path
sudo launchctl config user path "${HOMEBREW_PREFIX}/bin:${PATH}"

# Enable TouchID for terminal sessions
sudo sed -i '.bak' '1s/^/auth       sufficient     pam_tid.so\'$'\n/g' /etc/pam.d/sudo

# iTerm2 Shell Integration
curl -L https://iterm2.com/shell_integration/install_shell_integration.sh | bash

########################################
# Only run on 'supported' OS versions
########################################
# https://setapp.com/how-to/full-list-of-all-macos-versions
# 10.15 - Catalina
# 11    - Big Sur
# 12    - Monterey
# 13    - Ventura
########################################
# Get OS version main number
OS_VER=$(sw_vers -productVersion | cut -f 1 -d .)

if [ "$OS_VER" -ge "11" ]; then
  # Java
  sudo ln -sfn ${HOMEBREW_PREFIX}/opt/openjdk/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk.jdk

  # Jenv
  export PATH="$HOME/.jenv/bin:$PATH"
  eval "$(jenv init -)"
  # exec $SHELL -l
  jenv add /Library/Java/JavaVirtualMachines/openjdk.jdk/Contents/Home

  jenv enable-plugin export
  jenv enable-plugin gradle
  jenv enable-plugin maven

  jenv add `/usr/libexec/java_home`
  jenv global system
  jenv shell system
  jenv versions
  jenv doctor

  # Perl
  # brew link --overwrite perl

  # Python
  # brew link --overwrite python
  #brew unlink python@3.9 && brew link python@3.9
  #ln -s /usr/local/bin/python3 /usr/local/bin/python

  # Install pip
  curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
  python3 get-pip.py
  rm ${HOME}/get-pip.py

  #Install CSVKit and check to make sure that it is in your path
  pip install csvkit

  # We need to open Docker to create symlinks, etc
  open "/Applications/Docker.app"
fi

########################################
{{ if eq .chezmoi.hostname "polonium" -}}
test ! -d ~/Library/LaunchAgents && mkdir -p /Users/mark/Library/LaunchAgents
brew autoupdate start --upgrade

echo "###########################################################"
echo "TODO: CyberPower PowerPanel Personal Installer needs installing, run the following command manually;" 
echo open "/opt/homebrew/Caskroom/powerpanel/2.4.6/CyberPower PowerPanel Personal Installer.app"
echo "###########################################################"
echo
{{ end -}}

########################################
{{ if eq .chezmoi.hostname "cobalt" -}}
# Java
brew tap AdoptOpenJDK/openjdk
brew install adoptopenjdk8
jenv add /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home

open "/System/Volumes/Data/usr/local/Caskroom/logitech-presentation/*/LogiPresentation Installer.app"

########################################
{{ end -}}

echo "###########################################################"
echo "Post Resilio sync setup;"
echo "- Run ./.local/bin/folderRelinks.sh"
echo "- Run ./.local/bin/setAttribs.sh"
echo
echo "- Setup required software"
echo "###########################################################"

########################################
{{ else if eq .chezmoi.os "linux" -}}

test -f ~/.linuxbrew/bin/brew && eval "$(~/.linuxbrew/bin/brew shellenv)"
test -f /home/linuxbrew/.linuxbrew/bin/brew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

# Jenv
export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"
# exec $SHELL -l
jenv add ${HOMEBREW_PREFIX}/opt/openjdk/

jenv global system
jenv shell system
jenv versions
jenv doctor

########################################
{{ end -}}

########################################
# Remove temp files
rm ${HOME}/nohup.out

# Remove unrequired packages.
brew autoremove

# Remove outdated versions from the cellar.
brew cleanup
########################################
